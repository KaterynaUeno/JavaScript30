<%# <h2>First Challenge</h2>
<h3>Piano</h3>

  <div class="keys">
    <div data-key="65" class="key">
      <kbd>A</kbd>
      <span class="sound">clap</span>
    </div>
    <div data-key="83" class="key">
      <kbd>S</kbd>
      <span class="sound">hihat</span>
    </div>
    <div data-key="68" class="key">
      <kbd>D</kbd>
      <span class="sound">kick</span>
    </div>
    <div data-key="70" class="key">
      <kbd>F</kbd>
      <span class="sound">openhat</span>
    </div>
    <div data-key="71" class="key">
      <kbd>G</kbd>
      <span class="sound">boom</span>
    </div>
    <div data-key="72" class="key">
      <kbd>H</kbd>
      <span class="sound">ride</span>
    </div>
    <div data-key="74" class="key">
      <kbd>J</kbd>
      <span class="sound">snare</span>
    </div>
    <div data-key="75" class="key">
      <kbd>K</kbd>
      <span class="sound">tom</span>
    </div>
    <div data-key="76" class="key">
      <kbd>L</kbd>
      <span class="sound">tink</span>
    </div>
  </div>

  <audio data-key="65" src="/app/sound/boom.wav"></audio>
  <audio data-key="83" src="/sound/clap.wav"></audio>
  <audio data-key="68" src="/sound/hihat.wav"></audio>
  <audio data-key="70" src="/sound/kick.wav"></audio>
  <audio data-key="71" src="/sound/openhat.wav"></audio>
  <audio data-key="72" src="/sound/ride.wav"></audio>
  <audio data-key="74" src="/sound/snare.wav"></audio>
  <audio data-key="75" src="/sound/tom.wav"></audio>
  <audio data-key="76" src="/sound/tink.wav"></audio>

<script>
 function playSound(event) {
    const audio = document.querySelector(`audio[data-key="${event.keyCode}"]`);
    const key = document.querySelector(`.key[data-key="${event.keyCode}"]`);
    if(!audio)return;   //stope function running all together
    audio.currentTime = 0;
    // audio.play();
    key.classList.add('playing');
};
function removeTransition(event) {
  if (event.propertyName !== 'transform') return;  //skip it if its not a transform
  this.classList.remove('playing');
}

const keys = document.querySelectorAll('.key');
  keys.forEach(key => key.addEventListener('transitionend', removeTransition));
  window.addEventListener('keydown',playSound);

</script>


</body>
</html> %>


<%# <body>
  <h2>Update CSS Variables with <span class='hl'>JS</span></h2>

  <div class="controls">
    <label for="spacing">Spacing:</label>
    <input id="spacing" type="range" name="spacing" min="10" max="200" value="10" data-sizing="px">

    <label for="blur">Blur:</label>
    <input id="blur" type="range" name="blur" min="0" max="25" value="10" data-sizing="px">

    <label for="base">Base Color</label>
    <input id="base" type="color" name="base" value="#ffc600">
  </div>

  <img src="https://source.unsplash.com/7bwQXzbF6KE/800x500">

  <style>

  :root {
  --base: green;
  --spacing: 20px;
  --blur: 10px;
  }
    img{
      padding: var(--spacing);
      background: var(--base);
      filter:blur(var(--blur));
    }

    body {
      text-align: center;
      background: #193549;
      color: white;
      font-family: 'helvetica neue', sans-serif;
      font-weight: 100;
      font-size: 50px;
    }

    .controls {
      margin-bottom: 50px;
    }

    input {
      width: 100px;
    }
  </style>

  <script>
  const controls= document.querySelectorAll('.controls input')

  function handleUpdate() {
    const suffix = this.dataset.sizing || '';
    document.documentElement.style.setProperty(`--${this.name}`, this.value + suffix);
  }
  controls.forEach(control => control.addEventListener('change', handleUpdate));
  controls.forEach(control => control.addEventListener('mousemove', handleUpdate));
  </script>

</body>
</html> %>


<body>
  <p><em>Psst: have a look at the JavaScript Console</em> üíÅ</p>
  <script>
    // Get your shorts on - this is an array workout!
    // ## Array Cardio Day 1

    // Some data we can work with

    const inventors = [
      { first: 'Albert', last: 'Einstein', year: 1879, passed: 1955 },
      { first: 'Isaac', last: 'Newton', year: 1643, passed: 1727 },
      { first: 'Galileo', last: 'Galilei', year: 1564, passed: 1642 },
      { first: 'Marie', last: 'Curie', year: 1867, passed: 1934 },
      { first: 'Johannes', last: 'Kepler', year: 1571, passed: 1630 },
      { first: 'Nicolaus', last: 'Copernicus', year: 1473, passed: 1543 },
      { first: 'Max', last: 'Planck', year: 1858, passed: 1947 },
      { first: 'Katherine', last: 'Blodgett', year: 1898, passed: 1979 },
      { first: 'Ada', last: 'Lovelace', year: 1815, passed: 1852 },
      { first: 'Sarah E.', last: 'Goode', year: 1855, passed: 1905 },
      { first: 'Lise', last: 'Meitner', year: 1878, passed: 1968 },
      { first: 'Hanna', last: 'Hammarstr√∂m', year: 1829, passed: 1909 }
    ];

    const people = [
      'Bernhard, Sandra', 'Bethea, Erin', 'Becker, Carl', 'Bentsen, Lloyd', 'Beckett, Samuel', 'Blake, William', 'Berger, Ric', 'Beddoes, Mick', 'Beethoven, Ludwig',
      'Belloc, Hilaire', 'Begin, Menachem', 'Bellow, Saul', 'Benchley, Robert', 'Blair, Robert', 'Benenson, Peter', 'Benjamin, Walter', 'Berlin, Irving',
      'Benn, Tony', 'Benson, Leana', 'Bent, Silas', 'Berle, Milton', 'Berry, Halle', 'Biko, Steve', 'Beck, Glenn', 'Bergman, Ingmar', 'Black, Elk', 'Berio, Luciano',
      'Berne, Eric', 'Berra, Yogi', 'Berry, Wendell', 'Bevan, Aneurin', 'Ben-Gurion, David', 'Bevel, Ken', 'Biden, Joseph', 'Bennington, Chester', 'Bierce, Ambrose',
      'Billings, Josh', 'Birrell, Augustine', 'Blair, Tony', 'Beecher, Henry', 'Biondo, Frank'
    ];

    // Array.prototype.filter()
    // 1. Filter the list of inventors for those who were born in the 1500's
    const born = inventors.filter(function(inventor){
      if(inventor.year >= 1500 && inventor.year < 1600) {
        return true;
      }
    });
    // console.table(born);

    // Array.prototype.map()
    // 2. Give us an array of the inventors first and last names

    const fullNames = inventors.map(inventor => `${inventor.first} ${inventor.last}`);
    // console.log(fullNames);

    // Array.prototype.sort()
    // 3. Sort the inventors by birthdate, oldest to youngest

    const sorted = inventors.sort(function(firstPerson, secondPerson){
      if (firstPerson.year > secondPerson.year){
        return 1;
       } else {
          return -1;
        }
    });
    // console.table(sorted);

    // Array.prototype.reduce()
    // 4. How many years did all the inventors live all together?

    const totalYears = inventors.reduce( (total, inventor) => {
      return total + (inventor.passed - inventor.year);
    }, 0);
    // console.log(totalYears);
    // 5. Sort the inventors by years lived

    const youngest = inventors.sort(function(firstPerson, secondPerson){
      const lastPerson = firstPerson.passed - firstPerson.year;
      const prelastPerson = secondPerson.passed - secondPerson.year;
      if(lastPerson > prelastPerson) {
        return -1;
      } else {
        return 1;
      }
    });

    // console.table(youngest);

    // 6. create a list of Boulevards in Paris that contain 'de' anywhere in the name
    // https://en.wikipedia.org/wiki/Category:Boulevards_in_Paris

    const category = document.querySelector('.mw-category');
    const links = Array.from(document.querySelectorAll('a'));
    const de = links
                    .map(link => link.textContent)
                    .filter(streetName => streetName.includes('de'));



    // 7. sort Exercise
    // Sort the people alphabetically by last name

    const peopleSorted = people.sort(function(a, b) {
      const [aLast, aFirst] = a.split(', ');
      const [bLast, bFirst] = b.split(', ');
      return aLast > bLast ? 1 : -1;
    });

    // console.log(peopleSorted);

    // 8. Reduce Exercise
    // Sum up the instances of each of these
    const data = ['car', 'car', 'truck', 'truck', 'bike', 'walk', 'car', 'van', 'bike', 'walk', 'car', 'van', 'car', 'truck' ];

    const transportation = data.reduce(function(obj, transport) {
      if(!obj[transport]) {
        obj[transport] = 0;
      }
      obj[transport] ++;
      return obj;
    },{});
    console.log(transportation);
  </script>
</body>
</html>
